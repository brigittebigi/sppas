[epydoc] # Epydoc section marker (required by ConfigParser)

# name
#   The documented project's name.
name: SPPAS annotationdata API Reference manual

# url
#   The documented project's URL.
url: http://www.lpl-aix.fr/~bigi/sppas/

# link
#   HTML code for the project link in the navigation bar.  If left
#   unspecified, the project link will be generated based on the
#   project's name and URL.
link: <a href="http://www.lpl-aix.fr/~bigi/sppas/">SPPAS</a>

# modules
#   The list of objects to document.  Objects can be named using
#   dotted names, module filenames, or package directory names.
#   Alases for this option include "objects" and "values".
#modules: ../sppas/annotationdata
# ==> in the command-line

# top
#   The "top" page for the documentation.  Can be a URL, the name
#   of a module or class, or one of the special names "trees.html",
#   "indices.html", or "help.html"
top: annotationdata

# output
#   The type of output that should be generated.  Should be one
#   of: html, text, latex, dvi, ps, pdf
output: html

# target
#   The path to the output directory.  May be relative or absolute.
#target: ./web/manual/
# ==> in the command-line with --output option

# frames
#   Whether or not to include a frames-based table of contents.
frames: no

# private
#   Whether or not to inclue private variables.  (Even if included,
#   private variables will be hidden by default.)
private: no

# imports
#   Whether or not to list each module's imports.
imports: no

# docformat
#   The default markup language for docstrings, for modules that do
#   not define __docformat__.  Defaults to epytext.
docformat: epytext

# verbosity
#   An integer indicating how verbose epydoc should be.  The default
#   value is 0; negative values will supress warnings and errors;
#   positive values will give more verbose output.
verbosity: 0

# parse
#   Whether or not parsing should be used to examine objects.
parse: yes

# css
#   The CSS stylesheet for HTML output.  Can be the name of a builtin
#   stylesheet, or the name of a file.
# css: ./etc/styles/epydoc.css
# ==> in the command-line with --css option

# introspect
#   Whether or not introspection should be used to examine objects.
introspect: yes

# graph
#   The list of graph types that should be automatically included
#   in the output.  Graphs are generated using the Graphviz "dot"
#   executable.  Graph types include: "classtree", "callgraph",
#   "umlclass".  Use "all" to include all graph types
#graph: no

# sourcecode
#   Whether or not to include syntax highlighted source code in
#   the output (HTML only).
sourcecode: yes

# pstat
#   The name of one or more pstat files (generated by the profile
#   or hotshot module).  These are used to generate call graphs.
pstat: profile.out

# separate-classes
#   Whether each class should be listed in its own section when
#   generating LaTeX or PDF output.
separate-classes: no

